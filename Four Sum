vector<vector<int>> fourSum(vector<int>& nums, int target) {
        int n = nums.size();
        sort(nums.begin(), nums.end());
        vector<vector<int>> ans;
        for(int i = 0;i<n;i++)
        {
            if(i>0 && nums[i] == nums[i-1])
            continue;
            for(int j = i+1;j<n;j++)
            {
                if(j>i+1 && nums[j] == nums[j-1]) continue;
                int x = j+1, y = n-1;
                while(x < y)
                {
                    long long sum = static_cast<long long>(nums[i]) + static_cast<long long>(nums[j]) + static_cast<long long>(nums[x]) + static_cast<long long>(nums[y]);
                    if(sum == target)
                    {
                        ans.push_back({nums[i], nums[j], nums[x], nums[y]});
                        while(x < y && nums[x] == nums[x+1]) x++;
                        while(x < y && nums[y] == nums[y-1]) y--;
                        x++;
                        y--;
                    }
                    if(sum < target) x++;
                    if(sum > target) y--;
                }
            }
        }
        return ans;
    }
